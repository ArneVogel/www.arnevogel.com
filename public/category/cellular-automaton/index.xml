<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cellular automaton on Welcome</title>
    <link>https://www.arnevogel.com/category/cellular-automaton/</link>
    <description>Recent content in cellular automaton on Welcome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Apr 2018 10:30:52 +0200</lastBuildDate>
    
	<atom:link href="https://www.arnevogel.com/category/cellular-automaton/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cyclic Cellular Automaton</title>
      <link>https://www.arnevogel.com/cyclic-cellular-automaton/</link>
      <pubDate>Wed, 04 Apr 2018 10:30:52 +0200</pubDate>
      
      <guid>https://www.arnevogel.com/cyclic-cellular-automaton/</guid>
      <description>Rules: Each cell has a state. There are n states set with the number of colors above. The state of a cell is between 0 and n-1. A cell with state i is consumed and changes to i+1 if the number of cells with state i+1 in the moore neighborhood are equal or greater to the threshold. If a cell is in the n-1 state while it is consumed, it changes its state to 0.</description>
    </item>
    
    <item>
      <title>Brian&#39;s Brain Cellular Automaton</title>
      <link>https://www.arnevogel.com/brians-brain-cellular-automaton/</link>
      <pubDate>Tue, 03 Apr 2018 17:08:02 +0200</pubDate>
      
      <guid>https://www.arnevogel.com/brians-brain-cellular-automaton/</guid>
      <description>Rules: There are three cell types. Dead (white), alive (black) and dying (gray). A alive cell always goes into dying and a dying cell always dies in the next iteration. A dead cell comes alive in the next iteration if the number of alive cells in the moore neighborhood are in the birth numbers (above).
Settings Clicking on the simulation turns cells on and off.
Controls:
 Start: Begins the simulation, calculating and displaying the next population every update rate seconds Step: Calculates and displays the next population Clear: Stops the simulation and clears the population Randomize: Randomly sets 50% of the cells alive and the other 50% dead Update Rate: How many milliseconds each frame is displayed.</description>
    </item>
    
    <item>
      <title>Life-like Cellular Automaton</title>
      <link>https://www.arnevogel.com/life-like-cellular-automaton/</link>
      <pubDate>Sat, 31 Mar 2018 12:52:42 +0200</pubDate>
      
      <guid>https://www.arnevogel.com/life-like-cellular-automaton/</guid>
      <description>Settings Clicking on the simulation turns cells on and off.
Controls:
 Start: Begins the simulation, calculating and displaying the next population every update rate seconds Step: Calculates and displays the next population Clear: Stops the simulation and clears the population Randomize: Randomly sets 50% of the cells alive and the other 50% dead Update Rate: How many milliseconds each frame is displayed. Lower = Faster simulation, but more CPU intensive.</description>
    </item>
    
  </channel>
</rss>